<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sc_task</collection>
        <condition/>
        <description>This rule is for doing various updates depending on the status coming from STORM</description>
        <execute_function>false</execute_function>
        <filter_condition table="sc_task">x_sksw_uk_itsm_u_vendor_statusVALCHANGES^x_sksw_uk_itsm_scope=Skanska UK^EQ<item display_value="-- None --" endquery="false" field="x_sksw_uk_itsm_u_vendor_status" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item display_value="Skanska UK" endquery="false" field="x_sksw_uk_itsm_scope" goto="false" newquery="false" operator="=" or="false" value="Skanska UK"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>FF RQ STRY0013713 Vendor Status Change</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	// Add your code here
	//Type appropriate comment here, and begin script below
	var vendorStatus = current.x_sksw_uk_itsm_u_vendor_status;
	var oldDevice = current.variables.device_to_be_replaced;
	var today = new GlideDateTime();
	var taskStatus;
	var taskStatusChanges;
	var assetStatus;
	var assetStatusChanges;
	var stormCC;
	var stormUser;
	var stormUserOU;
	var stormOrderRef;
	var stormNewDevice;
	var poNumber;
	
	gs.addInfoMessage("vendorStatus " + vendorStatus);
	// Fetch some details from Atorm audit table and User table
	//gs.addInfoMessage("oldDevice " + oldDevice);
	var stormAuditFetch = new GlideRecord('x_sksw_uk_itsm_eol_pc_refresh');
	stormAuditFetch.addQuery('u_ctask1',current.sys_id);
	stormAuditFetch.query();
	if(stormAuditFetch.next())
		{
		//stormCC = stormAuditFetch.getValue('u_user_id.ref_sys_user.cost_center');
		//gs.addInfoMessage("stormCC " + stormCC);
		stormUser =  stormAuditFetch.getValue('u_user_id');
		//gs.addInfoMessage("stormUser " + stormUser);
		//stormUserOU = stormAuditFetch.getValue('u_user_id.cost_center.x_sksw_uk_itsm_operating_unit');
		//gs.addInfoMessage("stormUserOU  " + stormUserOU);
		stormOrderRef =  stormAuditFetch.getValue('order_storm_ref');
		//gs.addInfoMessage("stormOrderRef  " + stormOrderRef);
		stormNewDevice = stormAuditFetch.getValue('u_new_device');
		//gs.addInfoMessage("stormNewDevice  " + stormNewDevice);
		//stormOldDevice = stormAuditFetch.getValue('device');
		//gs.addInfoMessage("stormOldDevice  " + stormOldDevice);
		var grUser = new GlideRecord('sys_user');
		grUser.addQuery('sys_id',stormUser);
		grUser.query();
		if(grUser.next())
			{
			//gs.addInfoMessage('grUser count ' + grUser.getRowCount());
			stormCC = grUser.getValue('cost_center');
			//gs.addInfoMessage("stormCC " + stormCC);
			if(!current.request_item.cat_item.category) // if its Desktop/Laptop or Tablet
				{
					poNumber = '090/53171/E950';
				}
			else
				{
			var grCC = new GlideRecord('cmn_cost_center');
			grCC.addQuery('sys_id',stormCC);
			grCC.query();
			if(grCC.next())
				{
				stormUserOU = grCC.getValue('x_sksw_uk_itsm_operating_unit');
				var grPo = new GlideRecord('x_sksw_uk_itsm_purchase_order');
				grPo.addQuery('cost_center',grUser.getValue('cost_center'));
				grPo.query();
				if(grPo.next())
					{
						poNumber = grPo.getValue('po_number');
					}
					
				//gs.addInfoMessage("stormUserOU  " + stormUserOU);
			}
				}
		}
	}  // END 	if(stormAuditFetch.next())
	
	
	
	//Find if there are more than one task for the same RITM
	//If there is only one then its Vendor Status Update for Order
	//If there is more than one then its Vendor Status Update for Return
	var EolorderFlag;
	var orderFlag;
	var returnFlag;
	
	/*var grTask = new GlideRecord('sc_task');
	grTask.addQuery('request_item',current.request_item);
	grTask.query();
	if(grTask.getRowCount() == 1)
		{
		orderFlag = true;
		
	}
	else if(grTask.getRowCount() > 1)
		{
		returnFlag = true;
		
	}*/
	
	var stormAudit5 = new GlideRecord('x_sksw_uk_itsm_eol_pc_refresh');
	stormAudit5.addNullQuery('u_invitation_email_sent_date');
	stormAudit5.addQuery('u_ctask1',current.sys_id);
	stormAudit5.query();
	if(stormAudit5.next())
		{
		orderFlag = true;
			
	}
	
	var stormAudit = new GlideRecord('x_sksw_uk_itsm_eol_pc_refresh');
	stormAudit.addQuery('u_ctask1',current.sys_id);
	stormAudit.addNotNullQuery('u_invitation_email_sent_date');
	stormAudit.query();
	if(stormAudit.next())
		{
		EolorderFlag = true;
		
	}
	var stormAudit4 = new GlideRecord('x_sksw_uk_itsm_eol_pc_refresh');
	stormAudit4.addQuery('u_ctask2',current.sys_id);
	stormAudit4.query();
	if(stormAudit4.next())
		{
		returnFlag = true;
		oldDevice = stormAudit4.getValue('device');
		//oldDevice = current.x_sksw_uk_itsm_cmdb_ci;
		/*if(!oldDevice)
			{
			oldDevice = stormAudit4.getValue('device');
		}*/
	}
	
//	gs.addInfoMessage("return flag "  + returnFlag);
//	gs.addInfoMessage("order flag "  + orderFlag);
//	gs.addInfoMessage("EOL Order flag "  + EolorderFlag);
//	gs.addInfoMessage('oldDevice ' + oldDevice);
	
	
	
	
	if (orderFlag)  // Vendor Status Update for Order
		{
		//gs.addInfoMessage('orderFlag ' + orderFlag);
		if (vendorStatus == 'Acknowledged')
			{
			current.x_sksw_uk_itsm_state = 2; //Work In Progress
			current.state = 2;	//Work In Progress
			taskStatus = "Work In Progress" ;
		}	// END if (vendorStatus == 'Acknowledged')
		else if (vendorStatus == 'Cancelled')
			{
			current.x_sksw_uk_itsm_state = 4; //Closed Incomplete
			current.state = 3;	//Closed Incomplete
			taskStatus = "Closed Incomplete" ;
		}	// END if (vendorStatus == 'Acknowledged')
		else if (vendorStatus == 'InProgress')
			{
			current.x_sksw_uk_itsm_state = 2; //Work In Progress
			current.state = 2;	//Work In Progress
			//assetStatus = "Asset storm Status Changed to (Replacement In Progress) and Asset Status Changed to (In Use)";
			//var grAsset = new GlideRecord('alm_hardware');
			//grAsset.addQuery('ci', oldDevice);
			//grAsset.query();
			//if (grAsset.next())
			{
				//	gs.addInfoMessage("inside InProgress ");
				//grAsset.x_sksw_uk_itsm_storm_status = "Replacement In Progress";
				//	grAsset.install_status = 1;   // In Use
				//grAsset.update();
			}
		}  // END else if (vendorStatus == 'InProgress')
		else if (vendorStatus == 'Completed')
			{
			//gs.addInfoMessage('if (vendorStatus == Completed) ');
			//assetStatus = "Asset storm Status Changed to (Replaced) and Asset Status Changed to (In Use)";
			//Search CI on the serial number provided by STORM,
			//Update ASSET(alm_hardware) :  Cost Centre (User's Cost Centre), Assigned to (User), Department (User's OU/EF), Vendor as Storm Technologies Limited,Order Number from StormRef, PO Number as 090/53171/E950,
			var grAsset1 = new GlideRecord('alm_hardware');
			grAsset1.addQuery('ci',stormNewDevice);
			grAsset1.query();
			//gs.addInfoMessage('grAsset1 count ' + grAsset1.getRowCount());
			if(grAsset1.next())
				{
				grAsset1.setValue('cost_centre',stormCC);
				grAsset1.setValue('assigned_to',stormUser);
				//grAsset1.setValue('department',stormUserOU);
				grAsset1.setValue('vendor','d57154631b9d44504252c8017e4bcbc1');   //Storm Technologies Limited
				grAsset1.setValue('po_number',poNumber);
				grAsset1.setValue('x_sksw_uk_itsm_order_number',current.number);
				grAsset1.update();
			}
			
			// Update Old Asset 'Storm Status' of CI to 'Replaced' and 'Operational Status' to 'In Use'
			/*var grAsset2 = new GlideRecord('alm_hardware');
			grAsset2.addQuery('ci', oldDevice);
			grAsset2.query();
			if (grAsset2.next())
				{
				//	gs.addInfoMessage("inside InProgress ");
				grAsset2.x_sksw_uk_itsm_storm_status = "Replaced";
				grAsset2.install_status = 1;   // In Use
				grAsset2.update();
				
				// Update cmdb_ci_computer : assigned_to
				var grCI1 = new GlideRecord('cmdb_ci_computer');
				grCI1.addQuery('sys_id',stormNewDevice);
				grCI1.query();
				//gs.addInfoMessage('grCI1 count ' + grCI1.getRowCount());
				if(grCI1.next())
					{
					grCI1.setValue('assigned_to',stormUser);
					grCI1.update();
				}
			}*/
			
			taskStatus = "Work In Progress";
			current.x_sksw_uk_itsm_state = 2; //Work In Progress
			current.state = 2;	//Work In Progress
			
		} // END else if (vendorStatus == 'Completed'  )
		else if (vendorStatus == 'Dispatched' )
			{
			//assetStatus = "Asset storm Status Changed to (Replaced) and Asset Status Changed to (In Use)";
			//Search CI on the serial number provided by STORM,
			//Update ASSET(alm_hardware) :  Cost Centre (User's Cost Centre), Assigned to (User), Department (User's OU/EF), Vendor as Storm Technologies Limited,Order Number from StormRef, PO Number as 090/53171/E950,
			var grAsset3 = new GlideRecord('alm_hardware');
			grAsset3.addQuery('ci',stormNewDevice);
			grAsset3.query();
			//gs.addInfoMessage('grAsset3 count ' + grAsset3.getRowCount());
			if(grAsset3.next())
				{
				grAsset3.setValue('cost_centre',stormCC);
				grAsset3.setValue('assigned_to',stormUser);
				//grAsset1.setValue('department',stormUserOU);
				grAsset3.setValue('vendor','d57154631b9d44504252c8017e4bcbc1');   //Storm Technologies Limited
				grAsset3.setValue('po_number',poNumber);
				grAsset3.setValue('x_sksw_uk_itsm_order_number',current.number);
				grAsset3.update();
			}
			
			// Update Old Asset 'Storm Status' of CI to 'Replaced' and 'Operational Status' to 'In Use'
			/*var grAsset4 = new GlideRecord('alm_hardware');
			grAsset4.addQuery('ci', oldDevice);
			grAsset4.query();
			if (grAsset4.next())
				{
				//	gs.addInfoMessage("inside InProgress ");
				grAsset4.x_sksw_uk_itsm_storm_status = "Replaced";
				grAsset4.install_status = 1;   // In Use
				grAsset4.update();
				
				// Update cmdb_ci_computer : assigned_to
				var grCI2 = new GlideRecord('cmdb_ci_computer');
				grCI2.addQuery('sys_id',stormNewDevice);
				grCI2.query();
				//gs.addInfoMessage('grCI1 count ' + grCI1.getRowCount());
				if(grCI2.next())
					{
					grCI2.setValue('assigned_to',stormUser);
					grCI2.update();
				}
			}*/
			
			taskStatus = "Closed Complete";
			current.x_sksw_uk_itsm_state = 3; //Closed Complete
			current.state = 3;	//Closed Complete
			
		} // END else if (vendorStatus == 'Dispatched' )
	} // END 	if(orderFlag)
	else if (returnFlag)  // Vendor Status Update for Return
		{
		//gs.addInfoMessage("inside IF returnFlag");
		if (vendorStatus == 'Acknowledged')
			{
			current.x_sksw_uk_itsm_state = 2; //Work In Progress
			current.state = 2;	//Work In Progress
			taskStatus = "Work In Progress" ;
		}	// END if (vendorStatus == 'Acknowledged')
		else if (vendorStatus == 'Cancelled')
			{
			current.x_sksw_uk_itsm_state = 4; //Closed Incomplete
			current.state = 3;	//Closed Incomplete
			taskStatus = "Closed Incomplete" ;
		}	// END if (vendorStatus == 'Acknowledged')
		else if (vendorStatus == 'InProgress')
			{
			//gs.addInfoMessage("inside InProgress ");
			current.x_sksw_uk_itsm_state = 2; //Work In Progress
			current.state = 2;	//Work In Progress
			assetStatus = "Asset storm Status Changed to (Return in Progress) and Asset Status Changed to (In Use)";
			var grAssetReturn = new GlideRecord('alm_hardware');
			grAssetReturn.addQuery('ci', oldDevice);
			grAssetReturn.query();
			if (grAssetReturn.next())
				{
				//	gs.addInfoMessage("inside InProgress ");
				grAssetReturn.x_sksw_uk_itsm_storm_status = "Return in Progress";
				grAssetReturn.install_status = 1;   // In Use
				grAssetReturn.update();
			}
		}  // END else if (vendorStatus == 'InProgress')
		else if (vendorStatus == 'Returned' )
			{
			
			assetStatus = "Asset storm Status Changed to (Returned) and Asset Status Changed to (In Stock)";		
			// Update Old Asset 'Storm Status' of CI to 'Returned' and 'Operational Status' to 'In Stock'
			var grAssetReturn2 = new GlideRecord('alm_hardware');
			grAssetReturn2.addQuery('ci', oldDevice);
			grAssetReturn2.query();
			if (grAssetReturn2.next())
				{
				//	gs.addInfoMessage("inside InProgress ");
				//grAssetReturn2.x_sksw_uk_itsm_storm_status = "Returned to Leassor";
				grAssetReturn2.x_sksw_uk_itsm_storm_status = "Returned";	
				grAssetReturn2.install_status = 6;   // In Stock	
				//grAssetReturn2.install_status = 7;   // Retired
				grAssetReturn2.setValue('assigned_to','');
				grAssetReturn2.update();
				
				
			}
			
			taskStatus = "Closed Complete";
			current.x_sksw_uk_itsm_state = 3; //Closed Complete
			current.state = 3;	//Closed Complete
			
			
		} // END else if (vendorStatus == 'Returned'  )
		else if (vendorStatus == 'InPool' )
			{
			
			assetStatus = "Asset storm Status Changed to (In Stock) and Asset Status Changed to (In Stock)";
			
			// Update Old Asset 'Storm Status' of CI to 'In Stock' and 'Operational Status' to 'In Stock'
			var grAssetReturn42 = new GlideRecord('alm_hardware');
			grAssetReturn42.addQuery('ci', oldDevice);
			grAssetReturn42.query();
			if (grAssetReturn42.next())
				{
				//	gs.addInfoMessage("inside InProgress ");
				grAssetReturn42.x_sksw_uk_itsm_storm_status = "In Stock";
				grAssetReturn42.install_status = 11;   // In Stock
				grAssetReturn42.setValue('assigned_to','');	
				grAssetReturn42.update();
				
				
			}
			
			taskStatus = "Closed Complete";
			current.x_sksw_uk_itsm_state = 3; //Closed Complete
			current.state = 3;	//Closed Complete
			
			
		} // END else if (vendorStatus == 'InTransit'  )	
		else if (vendorStatus == 'InTransit' )
			{
			
			//gs.addInfoMessage('inside if InTransit');
			assetStatus = "Asset storm Status Changed to (Collection In Transit), Sub Status of Asset changed to Available and Asset Status Changed to (In Transit)";
			
			// Update Old Asset 'Storm Status' of CI to 'In Stock' and 'Operational Status' to 'In Stock'
			var grAssetReturn43 = new GlideRecord('alm_hardware');
			grAssetReturn43.addQuery('ci', oldDevice);
			grAssetReturn43.query();
			if (grAssetReturn43.next())
				{
					//gs.addInfoMessage("inside InTransit update asset ");
				grAssetReturn43.x_sksw_uk_itsm_storm_status = "Collection In Transit";
				grAssetReturn43.install_status = 9;   // In Transit
				grAssetReturn43.substatus = "available";   // Available	
				grAssetReturn43.setValue('assigned_to','');	
				grAssetReturn43.update();
				
				
			}
			
		} // END else if (vendorStatus == 'InTransit'  )	
		else if (vendorStatus == 'HeldRequest' )
			{
			
			assetStatus = "Asset storm Status Changed to (Collection in Progress Hold) and Asset Status Changed to (In Use)";
			
			// Update Old Asset 'Storm Status' of CI to 'In Stock' and 'Operational Status' to 'In Stock'
			var grAssetReturn44 = new GlideRecord('alm_hardware');
			grAssetReturn44.addQuery('ci', oldDevice);
			grAssetReturn44.query();
			if (grAssetReturn44.next())
				{
				//	gs.addInfoMessage("inside InProgress ");
				grAssetReturn44.x_sksw_uk_itsm_storm_status = "Collection in Progress Hold";
				grAssetReturn44.install_status = 1;   // In Use		
				grAssetReturn44.setValue('assigned_to','');	
				grAssetReturn44.update();
				
				
			}
			} // END else if (vendorStatus == 'HeldRequest'  )	
	} // END 	if(returnFlag)
	else if (EolorderFlag)  // Vendor Status Update for Order
		{
		//gs.addInfoMessage('orderFlag ' + orderFlag);
		if (vendorStatus == 'Acknowledged')
			{
			current.x_sksw_uk_itsm_state = 2; //Work In Progress
			current.state = 2;	//Work In Progress
			taskStatus = "Work In Progress" ;
		}	// END if (vendorStatus == 'Acknowledged')
		else if (vendorStatus == 'Cancelled')
			{
			current.x_sksw_uk_itsm_state = 4; //Closed Incomplete
			current.state = 3;	//Closed Incomplete
			taskStatus = "Closed Incomplete" ;
		}	// END if (vendorStatus == 'Acknowledged')
		else if (vendorStatus == 'InProgress')
			{
			current.x_sksw_uk_itsm_state = 2; //Work In Progress
			current.state = 2;	//Work In Progress
			assetStatus = "Asset storm Status Changed to (Replacement In Progress) and Asset Status Changed to (In Use)";
			var grAsset11 = new GlideRecord('alm_hardware');
			grAsset11.addQuery('ci', oldDevice);
			grAsset11.query();
			if (grAsset11.next())
				{
				//	gs.addInfoMessage("inside InProgress ");
				grAsset11.x_sksw_uk_itsm_storm_status = "Replacement In Progress";
				grAsset11.install_status = 1;   // In Use
				grAsset11.update();
			}
		}  // END else if (vendorStatus == 'InProgress')
		else if (vendorStatus == 'Completed')
			{
			//gs.addInfoMessage('if (vendorStatus == Completed) ');
			assetStatus = "Asset storm Status Changed to (Replaced) and Asset Status Changed to (In Use)";
			//Search CI on the serial number provided by STORM,
			//Update ASSET(alm_hardware) :  Cost Centre (User's Cost Centre), Assigned to (User), Department (User's OU/EF), Vendor as Storm Technologies Limited,Order Number from StormRef, PO Number as 090/53171/E950,
			var grAsset12 = new GlideRecord('alm_hardware');
			grAsset12.addQuery('ci',stormNewDevice);
			grAsset12.query();
			//gs.addInfoMessage('grAsset1 count ' + grAsset1.getRowCount());
			if(grAsset12.next())
				{
				grAsset12.setValue('cost_centre',stormCC);
				grAsset12.setValue('assigned_to',stormUser);
				//grAsset1.setValue('department',stormUserOU);
				grAsset12.setValue('vendor','d57154631b9d44504252c8017e4bcbc1');   //Storm Technologies Limited
				grAsset12.setValue('po_number','090/53171/E950');
				grAsset12.setValue('x_sksw_uk_itsm_order_number',current.number);
				grAsset12.update();
			}
			
			// Update Old Asset 'Storm Status' of CI to 'Replaced' and 'Operational Status' to 'In Use'
			var grAsset22 = new GlideRecord('alm_hardware');
			grAsset22.addQuery('ci', oldDevice);
			grAsset22.query();
			if (grAsset22.next())
				{
				//	gs.addInfoMessage("inside InProgress ");
				grAsset22.x_sksw_uk_itsm_storm_status = "Replaced";
				grAsset22.install_status = 1;   // In Use
				grAsset22.update();
				
				// Update cmdb_ci_computer : assigned_to
				var grCI11 = new GlideRecord('cmdb_ci_computer');
				grCI11.addQuery('sys_id',stormNewDevice);
				grCI11.query();
				//gs.addInfoMessage('grCI1 count ' + grCI1.getRowCount());
				if(grCI11.next())
					{
					grCI11.setValue('assigned_to',stormUser);
					grCI11.update();
				}
			}
			
			taskStatus = "Work In Progress";
			current.x_sksw_uk_itsm_state = 2; //Work In Progress
			current.state = 2;	//Work In Progress
			
		} // END else if (vendorStatus == 'Completed'  )
		else if (vendorStatus == 'Dispatched' )
			{
			assetStatus = "Asset storm Status Changed to (Replaced) and Asset Status Changed to (In Use)";
			//Search CI on the serial number provided by STORM,
			//Update ASSET(alm_hardware) :  Cost Centre (User's Cost Centre), Assigned to (User), Department (User's OU/EF), Vendor as Storm Technologies Limited,Order Number from StormRef, PO Number as 090/53171/E950,
			var grAsset33 = new GlideRecord('alm_hardware');
			grAsset33.addQuery('ci',stormNewDevice);
			grAsset33.query();
			//gs.addInfoMessage('grAsset3 count ' + grAsset3.getRowCount());
			if(grAsset33.next())
				{
				grAsset33.setValue('cost_centre',stormCC);
				grAsset33.setValue('assigned_to',stormUser);
				//grAsset1.setValue('department',stormUserOU);
				grAsset33.setValue('vendor','d57154631b9d44504252c8017e4bcbc1');   //Storm Technologies Limited
				grAsset33.setValue('po_number','090/53171/E950');
				grAsset33.setValue('x_sksw_uk_itsm_order_number',current.number);
				grAsset33.update();
			}
			
			// Update Old Asset 'Storm Status' of CI to 'Replaced' and 'Operational Status' to 'In Use'
			var grAsset44 = new GlideRecord('alm_hardware');
			grAsset44.addQuery('ci', oldDevice);
			grAsset44.query();
			if (grAsset44.next())
				{
				//	gs.addInfoMessage("inside InProgress ");
				grAsset44.x_sksw_uk_itsm_storm_status = "Replaced";
				grAsset44.install_status = 1;   // In Use
				grAsset44.update();
				
				// Update cmdb_ci_computer : assigned_to
				var grCI22 = new GlideRecord('cmdb_ci_computer');
				grCI22.addQuery('sys_id',stormNewDevice);
				grCI22.query();
				//gs.addInfoMessage('grCI1 count ' + grCI1.getRowCount());
				if(grCI22.next())
					{
					grCI22.setValue('assigned_to',stormUser);
					grCI22.update();
				}
			}
			
			taskStatus = "Closed Complete";
			current.x_sksw_uk_itsm_state = 3; //Closed Complete
			current.state = 3;	//Closed Complete
			
		} // END else if (vendorStatus == 'Dispatched' )			
	} // END 	if(EolorderFlag)
	
	
	
	
	
	
	
	
	
	
	
	var stormAudit1 = new GlideRecord('x_sksw_uk_itsm_eol_pc_refresh');
	stormAudit1.addQuery('u_ctask1',current.sys_id);
	stormAudit1.query();
	//	gs.addInfoMessage("stormAudit 1 count " + stormAudit1.getRowCount());
	if(stormAudit1.next())
		{
		if (stormAudit1.getValue('u_ctask1_status_changes'))
			{
			taskStatusChanges = stormAudit1.getValue('u_ctask1_status_changes') + "\n" + taskStatus + " - " + today;
		}
		else
			{
			taskStatusChanges =  taskStatus + " - " + today;
		}
		if (stormAudit1.getValue('u_ci_status_changes_for_ctask1'))
			{
			assetStatusChanges = stormAudit1.getValue('u_ci_status_changes_for_ctask1') + "\n" + assetStatus + " - " + today;
		}
		else
			{
			assetStatusChanges =  assetStatus + " - " + today;
		}
		if (taskStatus)
			{
			stormAudit1.setValue('u_ctask1_status_changes',taskStatusChanges);
		}
		if (assetStatus)
			{
			stormAudit1.setValue('u_ci_status_changes_for_ctask1',assetStatusChanges);
		}
		stormAudit1.update();
	}  // END if(stormAudit1.next())
	else
		{
		var stormAudit2 = new GlideRecord('x_sksw_uk_itsm_eol_pc_refresh');
		stormAudit2.addQuery('u_ctask2',current.sys_id);
		stormAudit2.query();
		//	gs.addInfoMessage("stormAudit 2 count " + stormAudit2.getRowCount());
		if(stormAudit2.next())
			{
			if (stormAudit2.getValue('u_ctask2_status_changes'))
				{
				taskStatusChanges = stormAudit2.getValue('u_ctask2_status_changes') + "\n" + taskStatus + " - " + today;
			}
			else
				{
				taskStatusChanges =  taskStatus + " - " + today;
			}
			if (stormAudit2.getValue('u_ci_status_changes_for_ctask2'))
				{
				assetStatusChanges = stormAudit2.getValue('u_ci_status_changes_for_ctask2') + "\n" + assetStatus + " - " + today;
			}
			else
				{
				assetStatusChanges =  assetStatus + " - " + today;
			}
			if (taskStatus)
				{
				stormAudit2.setValue('u_ctask2_status_changes',taskStatusChanges);
			}
			if (assetStatus)
				{
				stormAudit2.setValue('u_ci_status_changes_for_ctask2',assetStatusChanges);
			}
			stormAudit2.update();
		}
		
	}
	
	
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>rizwan.quadri@flyform.com</sys_created_by>
        <sys_created_on>2020-01-22 12:01:56</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>907012741bae8c504d21ed3fad4bcbce</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>FF RQ STRY0013713 Vendor Status Change</sys_name>
        <sys_overrides/>
        <sys_package display_value="UK ITSM" source="x_sksw_uk_itsm">7889315b1bd04410eb7365386e4bcbbb</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="UK ITSM">7889315b1bd04410eb7365386e4bcbbb</sys_scope>
        <sys_update_name>sys_script_907012741bae8c504d21ed3fad4bcbce</sys_update_name>
        <sys_updated_by>rizwan.quadri@flyform.com</sys_updated_by>
        <sys_updated_on>2020-01-22 13:05:16</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=907012741bae8c504d21ed3fad4bcbce"/>
</record_update>
