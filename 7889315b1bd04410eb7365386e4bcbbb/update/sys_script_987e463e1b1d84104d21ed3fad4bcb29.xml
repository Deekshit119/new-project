<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sc_task</collection>
        <condition>current.state.changes()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sc_task">x_sksw_uk_itsm_scope=Skanska UK^EQ<item display_value="Skanska UK" endquery="false" field="x_sksw_uk_itsm_scope" goto="false" newquery="false" operator="=" or="false" value="Skanska UK"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>FF_JH_Active_Task_Management</name>
        <order>40</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/**
 Service-now.com

 Description: Generic task closer/opener using table level state definitions
 **/

processTaskStates();

function processTaskStates() {

	//use TaskStateUtil logic
	var stateUtil = new TaskStateUtil(current);
	var closeStates = stateUtil.getInactiveStates();
	//see if we have at least the close state attribute
	if (closeStates == null)
		return;

	//get default close and work state attribute or use defaults
	var defaultCloseState = stateUtil.getDefaultCloseState();
	var defaultWorkState =  stateUtil.getDefaultWorkState();

	//determine previous and current state active status
	var previousStateInactive = stateUtil.isStateInactive(previous.state);
	var currentStateInactive = stateUtil.isStateInactive(current.state);

	//set record to inactive (close) if we move from an active state to an inactive state
	if (!previousStateInactive && currentStateInactive && current.active) {
		current.active = false;
		gs.print(current.getDisplayValue() + ": State changed (" + previous.state.getDisplayValue() + "->" + current.state.getDisplayValue() + "), setting task to inactive");
	}

	//set record to active (reopen) if we move from an inactive state to an active state
	if (previousStateInactive && !currentStateInactive && !current.active) {
		current.active = true;
		gs.print(current.getDisplayValue() + ": State changed (" + previous.state.getDisplayValue() + "->" + current.state.getDisplayValue() + "), setting task to active");
	}

}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>jesse.haddad@flyform.com</sys_created_by>
        <sys_created_on>2019-11-27 13:44:16</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>987e463e1b1d84104d21ed3fad4bcb29</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>FF_JH_Active_Task_Management</sys_name>
        <sys_overrides/>
        <sys_package display_value="UK ITSM" source="x_sksw_uk_itsm">7889315b1bd04410eb7365386e4bcbbb</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="UK ITSM">7889315b1bd04410eb7365386e4bcbbb</sys_scope>
        <sys_update_name>sys_script_987e463e1b1d84104d21ed3fad4bcb29</sys_update_name>
        <sys_updated_by>jesse.haddad@flyform.com</sys_updated_by>
        <sys_updated_on>2019-12-04 14:26:48</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=987e463e1b1d84104d21ed3fad4bcb29"/>
</record_update>
